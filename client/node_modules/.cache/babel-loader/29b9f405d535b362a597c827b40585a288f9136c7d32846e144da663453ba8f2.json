{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personnal\\\\todolist.erwanthomy.fr\\\\client\\\\src\\\\components\\\\ToDoLists.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ToDoList.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoLists = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [taskType, setTaskType] = useState('personal'); // personal or group\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [view, setView] = useState('menu'); // menu, create, view\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    if (view === 'create') {\n      fetchGroups(); // Fetch groups when creating a new task\n    }\n    if (view === 'view') {\n      fetchTasks(); // Fetch tasks when viewing tasks\n    }\n  }, [view]);\n\n  // Function to fetch user's groups for task creation\n  const fetchGroups = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setMessage('You need to login to access your groups.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://localhost:3113/groups', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setGroups(response.data);\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n      setMessage('Error fetching groups.');\n    }\n  };\n\n  // Function to fetch all tasks for the user\n  const fetchTasks = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setMessage('You need to login to view your tasks.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://localhost:3113/tasks', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(response.data); // Update tasks state with fetched tasks\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      setMessage('Error fetching tasks. Please log in again.');\n    }\n  };\n\n  // Function to create a task (personal or group)\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post('http://localhost:3113/tasks/create', {\n        title,\n        description,\n        dueDate,\n        groupId: taskType === 'group' ? selectedGroup : null // Use groupId if it's a group task\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 201) {\n        setMessage('Task created successfully!');\n        setTitle('');\n        setDescription('');\n        setDueDate('');\n        setSelectedGroup('');\n        setView('menu'); // Go back to the menu after creating a task\n      }\n    } catch (error) {\n      setMessage('Failed to create task. Please try again.');\n      console.error('Error creating task:', error);\n    }\n  };\n\n  // Function to delete a task (only allowed if user is the creator or group admin)\n  const handleDeleteTask = async taskId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.delete(`http://localhost:3113/tasks/${taskId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setMessage('Task deleted successfully!');\n        fetchTasks(); // Refresh the task list after deletion\n      }\n    } catch (error) {\n      setMessage('Failed to delete task. Please try again.');\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  // Function to mark a task as complete or incomplete\n  const handleToggleComplete = async (taskId, isCompleted) => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.put(`http://localhost:3113/tasks/${taskId}/toggle-complete`, {\n        isCompleted\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setMessage(`Task marked as ${isCompleted ? 'complete' : 'unfinished'} successfully!`);\n        fetchTasks(); // Refresh the task list after updating status\n      }\n    } catch (error) {\n      setMessage('Failed to update task status. Please try again.');\n      console.error('Error updating task status:', error);\n    }\n  };\n\n  // Function to archive a task\n  const handleArchiveTask = async taskId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.put(`http://localhost:3113/tasks/${taskId}/archive`, null, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setMessage('Task archived successfully!');\n        fetchTasks(); // Refresh the task list after archiving\n      }\n    } catch (error) {\n      setMessage('Failed to archive task. Please try again.');\n      console.error('Error archiving task:', error);\n    }\n  };\n\n  // Function to handle view change\n  const handleViewChange = selectedView => {\n    setView(selectedView);\n    setMessage('');\n  };\n  const userId = localStorage.getItem('userId'); // Assuming userId is stored in localStorage\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To-Do List Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), view === 'menu' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleViewChange('create'),\n        className: \"menu-button\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleViewChange('view'),\n        className: \"menu-button\",\n        children: \"View Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this), view === 'create' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleViewChange('menu'),\n        className: \"back-button\",\n        children: \"Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateTask,\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: taskType,\n            onChange: e => setTaskType(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"personal\",\n              children: \"Personal Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"group\",\n              children: \"Group Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), taskType === 'group' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedGroup,\n            onChange: e => setSelectedGroup(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: group.group_id,\n              children: group.group_name\n            }, group.group_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dueDate,\n            onChange: e => setDueDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this), view === 'view' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleViewChange('menu'),\n        className: \"back-button\",\n        children: \"Back to Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"task-list\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 37\n          }, this), task.group_id && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Group: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: task.group_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Due: \", task.due_date ? new Date(task.due_date).toLocaleDateString() : 'No due date']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", task.is_completed ? 'Completed' : 'Pending']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 37\n          }, this), task.is_completed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToggleComplete(task.task_id, false),\n              className: \"complete-button\",\n              children: \"Mark as Unfinished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleArchiveTask(task.task_id),\n              className: \"archive-button\",\n              children: \"Archive Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleComplete(task.task_id, true),\n            className: \"complete-button\",\n            children: \"Mark as Finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 41\n          }, this), (task.user_id === userId || task.admin_id === userId) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(task.task_id),\n            className: \"delete-button\",\n            children: \"Delete Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 41\n          }, this)]\n        }, task.task_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have no tasks yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDoLists, \"jps+C/CUb90j4iGgcxn+99MjH58=\");\n_c = ToDoLists;\nexport default ToDoLists;\nvar _c;\n$RefreshReg$(_c, \"ToDoLists\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoLists","_s","groups","setGroups","tasks","setTasks","title","setTitle","description","setDescription","dueDate","setDueDate","taskType","setTaskType","selectedGroup","setSelectedGroup","view","setView","message","setMessage","fetchGroups","fetchTasks","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleCreateTask","e","preventDefault","post","groupId","status","handleDeleteTask","taskId","delete","handleToggleComplete","isCompleted","put","handleArchiveTask","handleViewChange","selectedView","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","value","onChange","target","required","disabled","map","group","group_id","group_name","type","length","task","due_date","Date","toLocaleDateString","is_completed","task_id","user_id","admin_id","_c","$RefreshReg$"],"sources":["E:/Personnal/todolist.erwanthomy.fr/client/src/components/ToDoLists.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ToDoList.css';\r\n\r\nconst ToDoLists = () => {\r\n    const [groups, setGroups] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [dueDate, setDueDate] = useState('');\r\n    const [taskType, setTaskType] = useState('personal'); // personal or group\r\n    const [selectedGroup, setSelectedGroup] = useState('');\r\n    const [view, setView] = useState('menu'); // menu, create, view\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (view === 'create') {\r\n            fetchGroups(); // Fetch groups when creating a new task\r\n        }\r\n        if (view === 'view') {\r\n            fetchTasks(); // Fetch tasks when viewing tasks\r\n        }\r\n    }, [view]);\r\n\r\n    // Function to fetch user's groups for task creation\r\n    const fetchGroups = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            setMessage('You need to login to access your groups.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('http://localhost:3113/groups', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setGroups(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching groups:', error);\r\n            setMessage('Error fetching groups.');\r\n        }\r\n    };\r\n\r\n    // Function to fetch all tasks for the user\r\n    const fetchTasks = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            setMessage('You need to login to view your tasks.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('http://localhost:3113/tasks', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setTasks(response.data); // Update tasks state with fetched tasks\r\n        } catch (error) {\r\n            console.error('Error fetching tasks:', error);\r\n            setMessage('Error fetching tasks. Please log in again.');\r\n        }\r\n    };\r\n\r\n    // Function to create a task (personal or group)\r\n    const handleCreateTask = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                'http://localhost:3113/tasks/create',\r\n                {\r\n                    title,\r\n                    description,\r\n                    dueDate,\r\n                    groupId: taskType === 'group' ? selectedGroup : null, // Use groupId if it's a group task\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 201) {\r\n                setMessage('Task created successfully!');\r\n                setTitle('');\r\n                setDescription('');\r\n                setDueDate('');\r\n                setSelectedGroup('');\r\n                setView('menu'); // Go back to the menu after creating a task\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to create task. Please try again.');\r\n            console.error('Error creating task:', error);\r\n        }\r\n    };\r\n\r\n    // Function to delete a task (only allowed if user is the creator or group admin)\r\n    const handleDeleteTask = async (taskId) => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.delete(`http://localhost:3113/tasks/${taskId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage('Task deleted successfully!');\r\n                fetchTasks(); // Refresh the task list after deletion\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to delete task. Please try again.');\r\n            console.error('Error deleting task:', error);\r\n        }\r\n    };\r\n\r\n    // Function to mark a task as complete or incomplete\r\n    const handleToggleComplete = async (taskId, isCompleted) => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.put(`http://localhost:3113/tasks/${taskId}/toggle-complete`, {\r\n                isCompleted,\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage(`Task marked as ${isCompleted ? 'complete' : 'unfinished'} successfully!`);\r\n                fetchTasks(); // Refresh the task list after updating status\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to update task status. Please try again.');\r\n            console.error('Error updating task status:', error);\r\n        }\r\n    };\r\n\r\n    // Function to archive a task\r\n    const handleArchiveTask = async (taskId) => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.put(`http://localhost:3113/tasks/${taskId}/archive`, null, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage('Task archived successfully!');\r\n                fetchTasks(); // Refresh the task list after archiving\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to archive task. Please try again.');\r\n            console.error('Error archiving task:', error);\r\n        }\r\n    };\r\n\r\n    // Function to handle view change\r\n    const handleViewChange = (selectedView) => {\r\n        setView(selectedView);\r\n        setMessage('');\r\n    };\r\n\r\n    const userId = localStorage.getItem('userId'); // Assuming userId is stored in localStorage\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <h2>To-Do List Management</h2>\r\n\r\n            {/* Menu View */}\r\n            {view === 'menu' && (\r\n                <div className=\"menu-buttons\">\r\n                    <button onClick={() => handleViewChange('create')} className=\"menu-button\">\r\n                        Create Task\r\n                    </button>\r\n                    <button onClick={() => handleViewChange('view')} className=\"menu-button\">\r\n                        View Tasks\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Create Task View */}\r\n            {view === 'create' && (\r\n                <div>\r\n                    <button onClick={() => handleViewChange('menu')} className=\"back-button\">\r\n                        Back to Menu\r\n                    </button>\r\n                    <form onSubmit={handleCreateTask} className=\"form-section\">\r\n                        <h3>Create a New Task</h3>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Task Type</label>\r\n                            <select\r\n                                value={taskType}\r\n                                onChange={(e) => setTaskType(e.target.value)}\r\n                                required\r\n                            >\r\n                                <option value=\"personal\">Personal Task</option>\r\n                                <option value=\"group\">Group Task</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        {taskType === 'group' && (\r\n                            <div className=\"form-group\">\r\n                                <label>Select Group</label>\r\n                                <select\r\n                                    value={selectedGroup}\r\n                                    onChange={(e) => setSelectedGroup(e.target.value)}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\" disabled>Select a group</option>\r\n                                    {groups.map((group) => (\r\n                                        <option key={group.group_id} value={group.group_id}>\r\n                                            {group.group_name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Title</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Description</label>\r\n                            <textarea\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Due Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                value={dueDate}\r\n                                onChange={(e) => setDueDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\">Create Task</button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n\r\n            {/* View Tasks View */}\r\n            {view === 'view' && (\r\n                <div>\r\n                    <button onClick={() => handleViewChange('menu')} className=\"back-button\">\r\n                        Back to Menu\r\n                    </button>\r\n                    <h3>Your Tasks</h3>\r\n                    {tasks.length > 0 ? (\r\n                        <ul className=\"task-list\">\r\n                            {tasks.map((task) => (\r\n                                <li key={task.task_id}>\r\n                                    <h4>{task.title}</h4>\r\n                                    <p>{task.description}</p>\r\n                                    {task.group_id && (\r\n                                        <p>Group: <strong>{task.group_name}</strong></p>\r\n                                    )}\r\n                                    <p>Due: {task.due_date ? new Date(task.due_date).toLocaleDateString() : 'No due date'}</p>\r\n                                    <p>Status: {task.is_completed ? 'Completed' : 'Pending'}</p>\r\n\r\n                                    {task.is_completed ? (\r\n                                        <>\r\n                                            <button onClick={() => handleToggleComplete(task.task_id, false)} className=\"complete-button\">\r\n                                                Mark as Unfinished\r\n                                            </button>\r\n                                            <button onClick={() => handleArchiveTask(task.task_id)} className=\"archive-button\">\r\n                                                Archive Task\r\n                                            </button>\r\n                                        </>\r\n                                    ) : (\r\n                                        <button onClick={() => handleToggleComplete(task.task_id, true)} className=\"complete-button\">\r\n                                            Mark as Finished\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    {(task.user_id === userId || task.admin_id === userId) && (\r\n                                        <button onClick={() => handleDeleteTask(task.task_id)} className=\"delete-button\">\r\n                                            Delete Task\r\n                                        </button>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>You have no tasks yet.</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {message && <p className=\"message\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoLists;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EACtD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,IAAIsB,IAAI,KAAK,QAAQ,EAAE;MACnBI,WAAW,CAAC,CAAC,CAAC,CAAC;IACnB;IACA,IAAIJ,IAAI,KAAK,MAAM,EAAE;MACjBK,UAAU,CAAC,CAAC,CAAC,CAAC;IAClB;EACJ,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACRH,UAAU,CAAC,0CAA0C,CAAC;MACtD;IACJ;IAEA,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,8BAA8B,EAAE;QAC7DC,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUN,KAAK;QAClC;MACJ,CAAC,CAAC;MACFnB,SAAS,CAACsB,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CX,UAAU,CAAC,wBAAwB,CAAC;IACxC;EACJ,CAAC;;EAED;EACA,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACRH,UAAU,CAAC,uCAAuC,CAAC;MACnD;IACJ;IAEA,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,6BAA6B,EAAE;QAC5DC,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUN,KAAK;QAClC;MACJ,CAAC,CAAC;MACFjB,QAAQ,CAACoB,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CX,UAAU,CAAC,4CAA4C,CAAC;IAC5D;EACJ,CAAC;;EAED;EACA,MAAMa,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAACwC,IAAI,CAC7B,oCAAoC,EACpC;QACI7B,KAAK;QACLE,WAAW;QACXE,OAAO;QACP0B,OAAO,EAAExB,QAAQ,KAAK,OAAO,GAAGE,aAAa,GAAG,IAAI,CAAE;MAC1D,CAAC,EACD;QACIa,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUN,KAAK;QAClC;MACJ,CACJ,CAAC;MAED,IAAIG,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAE;QACzBlB,UAAU,CAAC,4BAA4B,CAAC;QACxCZ,QAAQ,CAAC,EAAE,CAAC;QACZE,cAAc,CAAC,EAAE,CAAC;QAClBE,UAAU,CAAC,EAAE,CAAC;QACdI,gBAAgB,CAAC,EAAE,CAAC;QACpBE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;MACrB;IACJ,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZX,UAAU,CAAC,0CAA0C,CAAC;MACtDY,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;;EAED;EACA,MAAMQ,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACvC,MAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAAC6C,MAAM,CAAC,+BAA+BD,MAAM,EAAE,EAAE;QACzEZ,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUN,KAAK;QAClC;MACJ,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAE;QACzBlB,UAAU,CAAC,4BAA4B,CAAC;QACxCE,UAAU,CAAC,CAAC,CAAC,CAAC;MAClB;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZX,UAAU,CAAC,0CAA0C,CAAC;MACtDY,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;;EAED;EACA,MAAMW,oBAAoB,GAAG,MAAAA,CAAOF,MAAM,EAAEG,WAAW,KAAK;IACxD,MAAMpB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAACgD,GAAG,CAAC,+BAA+BJ,MAAM,kBAAkB,EAAE;QACtFG;MACJ,CAAC,EAAE;QACCf,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUN,KAAK;QAClC;MACJ,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAE;QACzBlB,UAAU,CAAC,kBAAkBuB,WAAW,GAAG,UAAU,GAAG,YAAY,gBAAgB,CAAC;QACrFrB,UAAU,CAAC,CAAC,CAAC,CAAC;MAClB;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZX,UAAU,CAAC,iDAAiD,CAAC;MAC7DY,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;;EAED;EACA,MAAMc,iBAAiB,GAAG,MAAOL,MAAM,IAAK;IACxC,MAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAACgD,GAAG,CAAC,+BAA+BJ,MAAM,UAAU,EAAE,IAAI,EAAE;QACpFZ,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUN,KAAK;QAClC;MACJ,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAE;QACzBlB,UAAU,CAAC,6BAA6B,CAAC;QACzCE,UAAU,CAAC,CAAC,CAAC,CAAC;MAClB;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZX,UAAU,CAAC,2CAA2C,CAAC;MACvDY,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;;EAED;EACA,MAAMe,gBAAgB,GAAIC,YAAY,IAAK;IACvC7B,OAAO,CAAC6B,YAAY,CAAC;IACrB3B,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAM4B,MAAM,GAAGxB,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAE/C,oBACI3B,OAAA;IAAKmD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BpD,OAAA;MAAAoD,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAG7BrC,IAAI,KAAK,MAAM,iBACZnB,OAAA;MAAKmD,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBpD,OAAA;QAAQyD,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAAC,QAAQ,CAAE;QAACG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAE3E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxD,OAAA;QAAQyD,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAAC,MAAM,CAAE;QAACG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAEzE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,EAGArC,IAAI,KAAK,QAAQ,iBACdnB,OAAA;MAAAoD,QAAA,gBACIpD,OAAA;QAAQyD,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAAC,MAAM,CAAE;QAACG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAEzE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxD,OAAA;QAAM0D,QAAQ,EAAEvB,gBAAiB;QAACgB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACtDpD,OAAA;UAAAoD,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE1BxD,OAAA;UAAKmD,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBpD,OAAA;YAAAoD,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBxD,OAAA;YACI2D,KAAK,EAAE5C,QAAS;YAChB6C,QAAQ,EAAGxB,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;YAC7CG,QAAQ;YAAAV,QAAA,gBAERpD,OAAA;cAAQ2D,KAAK,EAAC,UAAU;cAAAP,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC/CxD,OAAA;cAAQ2D,KAAK,EAAC,OAAO;cAAAP,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,EAELzC,QAAQ,KAAK,OAAO,iBACjBf,OAAA;UAAKmD,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBpD,OAAA;YAAAoD,QAAA,EAAO;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3BxD,OAAA;YACI2D,KAAK,EAAE1C,aAAc;YACrB2C,QAAQ,EAAGxB,CAAC,IAAKlB,gBAAgB,CAACkB,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;YAClDG,QAAQ;YAAAV,QAAA,gBAERpD,OAAA;cAAQ2D,KAAK,EAAC,EAAE;cAACI,QAAQ;cAAAX,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAChDnD,MAAM,CAAC2D,GAAG,CAAEC,KAAK,iBACdjE,OAAA;cAA6B2D,KAAK,EAAEM,KAAK,CAACC,QAAS;cAAAd,QAAA,EAC9Ca,KAAK,CAACE;YAAU,GADRF,KAAK,CAACC,QAAQ;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEnB,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CACR,eAEDxD,OAAA;UAAKmD,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBpD,OAAA;YAAAoD,QAAA,EAAO;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBxD,OAAA;YACIoE,IAAI,EAAC,MAAM;YACXT,KAAK,EAAElD,KAAM;YACbmD,QAAQ,EAAGxB,CAAC,IAAK1B,QAAQ,CAAC0B,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;YAC1CG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNxD,OAAA;UAAKmD,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBpD,OAAA;YAAAoD,QAAA,EAAO;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1BxD,OAAA;YACI2D,KAAK,EAAEhD,WAAY;YACnBiD,QAAQ,EAAGxB,CAAC,IAAKxB,cAAc,CAACwB,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;YAChDG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNxD,OAAA;UAAKmD,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBpD,OAAA;YAAAoD,QAAA,EAAO;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvBxD,OAAA;YACIoE,IAAI,EAAC,MAAM;YACXT,KAAK,EAAE9C,OAAQ;YACf+C,QAAQ,EAAGxB,CAAC,IAAKtB,UAAU,CAACsB,CAAC,CAACyB,MAAM,CAACF,KAAK;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNxD,OAAA;UAAQoE,IAAI,EAAC,QAAQ;UAAAhB,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACR,EAGArC,IAAI,KAAK,MAAM,iBACZnB,OAAA;MAAAoD,QAAA,gBACIpD,OAAA;QAAQyD,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAAC,MAAM,CAAE;QAACG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAEzE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTxD,OAAA;QAAAoD,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClBjD,KAAK,CAAC8D,MAAM,GAAG,CAAC,gBACbrE,OAAA;QAAImD,SAAS,EAAC,WAAW;QAAAC,QAAA,EACpB7C,KAAK,CAACyD,GAAG,CAAEM,IAAI,iBACZtE,OAAA;UAAAoD,QAAA,gBACIpD,OAAA;YAAAoD,QAAA,EAAKkB,IAAI,CAAC7D;UAAK;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBxD,OAAA;YAAAoD,QAAA,EAAIkB,IAAI,CAAC3D;UAAW;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACxBc,IAAI,CAACJ,QAAQ,iBACVlE,OAAA;YAAAoD,QAAA,GAAG,SAAO,eAAApD,OAAA;cAAAoD,QAAA,EAASkB,IAAI,CAACH;YAAU;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAClD,eACDxD,OAAA;YAAAoD,QAAA,GAAG,OAAK,EAACkB,IAAI,CAACC,QAAQ,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACC,QAAQ,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAAG,aAAa;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1FxD,OAAA;YAAAoD,QAAA,GAAG,UAAQ,EAACkB,IAAI,CAACI,YAAY,GAAG,WAAW,GAAG,SAAS;UAAA;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAE3Dc,IAAI,CAACI,YAAY,gBACd1E,OAAA,CAAAE,SAAA;YAAAkD,QAAA,gBACIpD,OAAA;cAAQyD,OAAO,EAAEA,CAAA,KAAMb,oBAAoB,CAAC0B,IAAI,CAACK,OAAO,EAAE,KAAK,CAAE;cAACxB,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAE9F;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxD,OAAA;cAAQyD,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACuB,IAAI,CAACK,OAAO,CAAE;cAACxB,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAC;YAEnF;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,eACX,CAAC,gBAEHxD,OAAA;YAAQyD,OAAO,EAAEA,CAAA,KAAMb,oBAAoB,CAAC0B,IAAI,CAACK,OAAO,EAAE,IAAI,CAAE;YAACxB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAE7F;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX,EAEA,CAACc,IAAI,CAACM,OAAO,KAAK1B,MAAM,IAAIoB,IAAI,CAACO,QAAQ,KAAK3B,MAAM,kBACjDlD,OAAA;YAAQyD,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAAC6B,IAAI,CAACK,OAAO,CAAE;YAACxB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAEjF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA,GA5BIc,IAAI,CAACK,OAAO;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA6BjB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,gBAELxD,OAAA;QAAAoD,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR,EAEAnC,OAAO,iBAAIrB,OAAA;MAAGmD,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAE/B;IAAO;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAACpD,EAAA,CAlTID,SAAS;AAAA2E,EAAA,GAAT3E,SAAS;AAoTf,eAAeA,SAAS;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}