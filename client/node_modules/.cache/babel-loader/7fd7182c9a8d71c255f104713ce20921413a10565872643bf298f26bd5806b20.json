{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personnal\\\\todolist.erwanthomy.fr\\\\client\\\\src\\\\components\\\\AccountManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from './Modal';\nimport './AccountManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountManagement = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    name: '',\n    email: ''\n  });\n  const [password, setPassword] = useState({\n    oldPassword: '',\n    newPassword: ''\n  });\n  const [message, setMessage] = useState('');\n  const [showModal, setShowModal] = useState(false); // Control modal visibility\n  const navigate = useNavigate();\n\n  // Function to fetch user details\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      axios.get('http://localhost:5000/account', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setUserData({\n          name: response.data.name,\n          email: response.data.email\n        });\n      }).catch(error => {\n        console.error('Error fetching user data', error);\n        setMessage('Error fetching user data.');\n      });\n    }\n  }, [navigate]);\n\n  // Function to handle user info update\n  const handleInfoUpdate = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.put('http://localhost:5000/account/update', {\n        name: userData.name,\n        email: userData.email\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setMessage('User information updated successfully.');\n      }\n    } catch (error) {\n      setMessage('Failed to update user information.');\n      console.error(error);\n    }\n  };\n\n  // Function to handle password change\n  const handlePasswordChange = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.put('http://localhost:5000/account/password', {\n        oldPassword: password.oldPassword,\n        newPassword: password.newPassword\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setMessage('Password updated successfully.');\n      }\n    } catch (error) {\n      setMessage('Failed to change password. Please check your old password.');\n      console.error(error);\n    }\n  };\n\n  // Function to handle account deletion\n  const handleDeleteAccount = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.delete('http://localhost:5000/account/delete', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        // Clear local storage and redirect to signup or home page\n        localStorage.removeItem('token');\n        navigate('/signup');\n      }\n    } catch (error) {\n      setMessage('Failed to delete account. Please try again.');\n      console.error(error);\n    }\n  };\n\n  // Show confirmation modal before deleting account\n  const confirmDelete = () => {\n    setShowModal(true); // Show modal\n  };\n\n  // Confirm deletion from the modal\n  const handleConfirmDelete = () => {\n    setShowModal(false); // Hide modal\n    handleDeleteAccount(); // Proceed with account deletion\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Account Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleInfoUpdate,\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update Personal Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userData.name,\n          onChange: e => setUserData({\n            ...userData,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: userData.email,\n          onChange: e => setUserData({\n            ...userData,\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordChange,\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Old Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password.oldPassword,\n          onChange: e => setPassword({\n            ...password,\n            oldPassword: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password.newPassword,\n          onChange: e => setPassword({\n            ...password,\n            newPassword: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-account\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: confirmDelete,\n        className: \"delete-button\",\n        children: \"Delete Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onClose: () => setShowModal(false),\n      onConfirm: handleConfirmDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(AccountManagement, \"J9umsbkgZdNNLhlrGLRpFpbPKdM=\", false, function () {\n  return [useNavigate];\n});\n_c = AccountManagement;\nexport default AccountManagement;\nvar _c;\n$RefreshReg$(_c, \"AccountManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Modal","jsxDEV","_jsxDEV","AccountManagement","_s","userData","setUserData","name","email","password","setPassword","oldPassword","newPassword","message","setMessage","showModal","setShowModal","navigate","token","localStorage","getItem","get","headers","Authorization","then","response","data","catch","error","console","handleInfoUpdate","e","preventDefault","put","status","handlePasswordChange","handleDeleteAccount","delete","removeItem","confirmDelete","handleConfirmDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","show","onClose","onConfirm","_c","$RefreshReg$"],"sources":["E:/Personnal/todolist.erwanthomy.fr/client/src/components/AccountManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from './Modal';\r\nimport './AccountManagement.css';\r\n\r\nconst AccountManagement = () => {\r\n    const [userData, setUserData] = useState({ name: '', email: '' });\r\n    const [password, setPassword] = useState({ oldPassword: '', newPassword: '' });\r\n    const [message, setMessage] = useState('');\r\n    const [showModal, setShowModal] = useState(false); // Control modal visibility\r\n    const navigate = useNavigate();\r\n\r\n    // Function to fetch user details\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            navigate('/login');\r\n        } else {\r\n            axios\r\n                .get('http://localhost:5000/account', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    setUserData({ name: response.data.name, email: response.data.email });\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error fetching user data', error);\r\n                    setMessage('Error fetching user data.');\r\n                });\r\n        }\r\n    }, [navigate]);\r\n\r\n    // Function to handle user info update\r\n    const handleInfoUpdate = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.put(\r\n                'http://localhost:5000/account/update',\r\n                { name: userData.name, email: userData.email },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                setMessage('User information updated successfully.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to update user information.');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // Function to handle password change\r\n    const handlePasswordChange = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.put(\r\n                'http://localhost:5000/account/password',\r\n                { oldPassword: password.oldPassword, newPassword: password.newPassword },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                setMessage('Password updated successfully.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to change password. Please check your old password.');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // Function to handle account deletion\r\n    const handleDeleteAccount = async () => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.delete('http://localhost:5000/account/delete', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                // Clear local storage and redirect to signup or home page\r\n                localStorage.removeItem('token');\r\n                navigate('/signup');\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to delete account. Please try again.');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // Show confirmation modal before deleting account\r\n    const confirmDelete = () => {\r\n        setShowModal(true); // Show modal\r\n    };\r\n\r\n    // Confirm deletion from the modal\r\n    const handleConfirmDelete = () => {\r\n        setShowModal(false); // Hide modal\r\n        handleDeleteAccount(); // Proceed with account deletion\r\n    };\r\n\r\n    return (\r\n        <div className=\"account-management-container\">\r\n            <h2>Account Management</h2>\r\n\r\n            {/* Edit User Information */}\r\n            <form onSubmit={handleInfoUpdate} className=\"form-section\">\r\n                <h3>Update Personal Information</h3>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userData.name}\r\n                        onChange={(e) => setUserData({ ...userData, name: e.target.value })}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={userData.email}\r\n                        onChange={(e) => setUserData({ ...userData, email: e.target.value })}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Update Info</button>\r\n            </form>\r\n\r\n            {/* Change Password */}\r\n            <form onSubmit={handlePasswordChange} className=\"form-section\">\r\n                <h3>Change Password</h3>\r\n                <div className=\"form-group\">\r\n                    <label>Old Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password.oldPassword}\r\n                        onChange={(e) => setPassword({ ...password, oldPassword: e.target.value })}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>New Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password.newPassword}\r\n                        onChange={(e) => setPassword({ ...password, newPassword: e.target.value })}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Change Password</button>\r\n            </form>\r\n\r\n            {/* Delete Account */}\r\n            <div className=\"delete-account\">\r\n                <button onClick={confirmDelete} className=\"delete-button\">Delete Account</button>\r\n            </div>\r\n\r\n            {/* Confirmation Modal */}\r\n            <Modal\r\n                show={showModal}\r\n                onClose={() => setShowModal(false)}\r\n                onConfirm={handleConfirmDelete}\r\n            />\r\n\r\n            {message && <p className=\"message\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AccountManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}