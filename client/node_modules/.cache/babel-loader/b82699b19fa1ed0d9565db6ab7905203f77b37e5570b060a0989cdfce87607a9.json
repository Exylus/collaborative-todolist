{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./ToDoList.css';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ToDoLists=()=>{const[groups,setGroups]=useState([]);const[tasks,setTasks]=useState([]);const[filteredTasks,setFilteredTasks]=useState([]);const[title,setTitle]=useState('');const[description,setDescription]=useState('');const[dueDate,setDueDate]=useState('');const[taskType,setTaskType]=useState('personal');// personal or group\nconst[selectedGroup,setSelectedGroup]=useState('');const[view,setView]=useState('menu');// menu, create, view\nconst[message,setMessage]=useState('');const[filterType,setFilterType]=useState('');// to store the selected filter type\nconst navigate=useNavigate();useEffect(()=>{if(view==='create'){fetchGroups();// Fetch groups when creating a new task\n}if(view==='view'){fetchTasks();// Fetch tasks when viewing tasks\n}},[view]);// Function to fetch user's groups for task creation\nconst fetchGroups=async()=>{const token=localStorage.getItem('token');if(!token){setMessage('You need to login to access your groups.');return;}try{const response=await axios.get('https://email.erwanthomy.fr:3113/groups',{headers:{Authorization:`Bearer ${token}`}});setGroups(response.data);}catch(error){console.error('Error fetching groups:',error);setMessage('Error fetching groups.');}};// Function to fetch all tasks for the user\nconst fetchTasks=async()=>{const token=localStorage.getItem('token');if(!token){setMessage('You need to login to view your tasks.');return;}try{const response=await axios.get('https://email.erwanthomy.fr:3113/tasks',{headers:{Authorization:`Bearer ${token}`}});setTasks(response.data);// Update tasks state with fetched tasks\nsetFilteredTasks(response.data);// Set the filtered tasks to initial fetched tasks\n}catch(error){if(error.response&&error.response.status===403){setMessage('Session expired. Please log in again.');localStorage.removeItem('token');navigate('/login');}else{var _error$response,_error$response$data;setMessage(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to fetching tasks. Please try again.');}console.error('Error fetching tasks:',error);}};// Function to create a task (personal or group)\nconst handleCreateTask=async e=>{e.preventDefault();const token=localStorage.getItem('token');try{const response=await axios.post('https://email.erwanthomy.fr:3113/tasks/create',{title,description,dueDate,groupId:taskType==='group'?selectedGroup:null// Use groupId if it's a group task\n},{headers:{Authorization:`Bearer ${token}`}});if(response.status===201){setMessage('Task created successfully!');setTitle('');setDescription('');setDueDate('');setSelectedGroup('');setView('menu');// Go back to the menu after creating a task\n}}catch(error){setMessage('Failed to create task. Please try again.');console.error('Error creating task:',error);}};// Function to delete a task (only allowed if user is the creator or group admin)\nconst handleDeleteTask=async taskId=>{const token=localStorage.getItem('token');try{const response=await axios.delete(`https://email.erwanthomy.fr:3113/tasks/${taskId}`,{headers:{Authorization:`Bearer ${token}`}});if(response.status===200){setMessage('Task deleted successfully!');fetchTasks();// Refresh the task list after deletion\n}}catch(error){setMessage('Failed to delete task. Please try again.');console.error('Error deleting task:',error);}};// Function to mark a task as complete or incomplete\nconst handleToggleComplete=async(taskId,isCompleted)=>{const token=localStorage.getItem('token');try{const response=await axios.put(`https://email.erwanthomy.fr:3113/tasks/${taskId}/toggle-complete`,{isCompleted},{headers:{Authorization:`Bearer ${token}`}});if(response.status===200){setMessage(`Task marked as ${isCompleted?'complete':'unfinished'} successfully!`);fetchTasks();// Refresh the task list after updating status\n}}catch(error){setMessage('Failed to update task status. Please try again.');console.error('Error updating task status:',error);}};// Function to archive a task\nconst handleArchiveTask=async taskId=>{const token=localStorage.getItem('token');try{const response=await axios.put(`https://email.erwanthomy.fr:3113/tasks/${taskId}/archive`,null,{headers:{Authorization:`Bearer ${token}`}});if(response.status===200){setMessage('Task archived successfully!');fetchTasks();// Refresh the task list after archiving\n}}catch(error){setMessage('Failed to archive task. Please try again.');console.error('Error archiving task:',error);}};// Function to handle filter change\nconst handleFilterChange=e=>{const selectedFilter=e.target.value;setFilterType(selectedFilter);applyFilter(selectedFilter);};// Function to apply the selected filter\nconst applyFilter=filterType=>{let sortedTasks=[...tasks];if(filterType==='dueDate'){sortedTasks.sort((a,b)=>new Date(a.due_date)-new Date(b.due_date));}else if(filterType==='creationDate'){sortedTasks.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));}setFilteredTasks(sortedTasks);};// Function to handle view change\nconst handleViewChange=selectedView=>{setView(selectedView);setMessage('');};const userId=localStorage.getItem('userId');// Assuming userId is stored in localStorage\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"todo-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"go-back\",onClick:()=>navigate('/dashboard'),children:\"Go back\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"To-Do List Management\"}),view==='menu'&&/*#__PURE__*/_jsxs(\"div\",{className:\"menu-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewChange('create'),className:\"menu-button\",children:\"Create Task\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewChange('view'),className:\"menu-button\",children:\"View Tasks\"})]}),view==='create'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewChange('menu'),className:\"back-button\",children:\"Back to Menu\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCreateTask,className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create a New Task\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Task Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:taskType,onChange:e=>setTaskType(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"personal\",children:\"Personal Task\"}),/*#__PURE__*/_jsx(\"option\",{value:\"group\",children:\"Group Task\"})]})]}),taskType==='group'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Group\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedGroup,onChange:e=>setSelectedGroup(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select a group\"}),groups.map(group=>/*#__PURE__*/_jsx(\"option\",{value:group.group_id,children:group.group_name},group.group_id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:e=>setTitle(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:description,onChange:e=>setDescription(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Due Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dueDate,onChange:e=>setDueDate(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Task\"})]})]}),view==='view'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewChange('menu'),className:\"back-button\",children:\"Back to Menu\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Filter Tasks By: \"}),/*#__PURE__*/_jsxs(\"select\",{value:filterType,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"None\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dueDate\",children:\"Due Date\"}),/*#__PURE__*/_jsx(\"option\",{value:\"creationDate\",children:\"Creation Date\"})]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Your Tasks\"}),filteredTasks.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"task-list\",children:filteredTasks.map(task=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:task.title}),/*#__PURE__*/_jsx(\"p\",{children:task.description}),task.group_id&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Group: \",/*#__PURE__*/_jsx(\"strong\",{children:task.group_name})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Due: \",task.due_date?new Date(task.due_date).toLocaleDateString():'No due date']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",task.is_completed?'Completed':'Pending']}),task.is_completed?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleToggleComplete(task.task_id,false),className:\"complete-button\",children:\"Mark as Unfinished\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleArchiveTask(task.task_id),className:\"archive-button\",children:\"Archive Task\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleToggleComplete(task.task_id,true),className:\"complete-button\",children:\"Mark as Finished\"}),(task.user_id===userId||task.admin_id===userId)&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteTask(task.task_id),className:\"delete-button\",children:\"Delete Task\"})]},task.task_id))}):/*#__PURE__*/_jsx(\"p\",{children:\"You have no tasks yet.\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message})]});};export default ToDoLists;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ToDoLists","groups","setGroups","tasks","setTasks","filteredTasks","setFilteredTasks","title","setTitle","description","setDescription","dueDate","setDueDate","taskType","setTaskType","selectedGroup","setSelectedGroup","view","setView","message","setMessage","filterType","setFilterType","navigate","fetchGroups","fetchTasks","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","status","removeItem","_error$response","_error$response$data","handleCreateTask","e","preventDefault","post","groupId","handleDeleteTask","taskId","delete","handleToggleComplete","isCompleted","put","handleArchiveTask","handleFilterChange","selectedFilter","target","value","applyFilter","sortedTasks","sort","a","b","Date","due_date","created_at","handleViewChange","selectedView","userId","className","children","onClick","onSubmit","onChange","required","disabled","map","group","group_id","group_name","type","length","task","toLocaleDateString","is_completed","task_id","user_id","admin_id"],"sources":["E:/Personnal/todolist.erwanthomy.fr/client/src/components/ToDoLists.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ToDoList.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ToDoLists = () => {\r\n    const [groups, setGroups] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [dueDate, setDueDate] = useState('');\r\n    const [taskType, setTaskType] = useState('personal'); // personal or group\r\n    const [selectedGroup, setSelectedGroup] = useState('');\r\n    const [view, setView] = useState('menu'); // menu, create, view\r\n    const [message, setMessage] = useState('');\r\n    const [filterType, setFilterType] = useState(''); // to store the selected filter type\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (view === 'create') {\r\n            fetchGroups(); // Fetch groups when creating a new task\r\n        }\r\n        if (view === 'view') {\r\n            fetchTasks(); // Fetch tasks when viewing tasks\r\n        }\r\n    }, [view]);\r\n\r\n    // Function to fetch user's groups for task creation\r\n    const fetchGroups = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            setMessage('You need to login to access your groups.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('https://email.erwanthomy.fr:3113/groups', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setGroups(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching groups:', error);\r\n            setMessage('Error fetching groups.');\r\n        }\r\n    };\r\n\r\n    // Function to fetch all tasks for the user\r\n    const fetchTasks = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            setMessage('You need to login to view your tasks.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('https://email.erwanthomy.fr:3113/tasks', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setTasks(response.data); // Update tasks state with fetched tasks\r\n            setFilteredTasks(response.data); // Set the filtered tasks to initial fetched tasks\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 403) {\r\n                setMessage('Session expired. Please log in again.');\r\n                localStorage.removeItem('token');\r\n                navigate('/login');\r\n            } else {\r\n                setMessage(error.response?.data?.error || 'Failed to fetching tasks. Please try again.');\r\n            }\r\n            console.error('Error fetching tasks:', error);\r\n        }\r\n    };\r\n\r\n    // Function to create a task (personal or group)\r\n    const handleCreateTask = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                'https://email.erwanthomy.fr:3113/tasks/create',\r\n                {\r\n                    title,\r\n                    description,\r\n                    dueDate,\r\n                    groupId: taskType === 'group' ? selectedGroup : null, // Use groupId if it's a group task\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 201) {\r\n                setMessage('Task created successfully!');\r\n                setTitle('');\r\n                setDescription('');\r\n                setDueDate('');\r\n                setSelectedGroup('');\r\n                setView('menu'); // Go back to the menu after creating a task\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to create task. Please try again.');\r\n            console.error('Error creating task:', error);\r\n        }\r\n    };\r\n\r\n    // Function to delete a task (only allowed if user is the creator or group admin)\r\n    const handleDeleteTask = async (taskId) => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.delete(`https://email.erwanthomy.fr:3113/tasks/${taskId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage('Task deleted successfully!');\r\n                fetchTasks(); // Refresh the task list after deletion\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to delete task. Please try again.');\r\n            console.error('Error deleting task:', error);\r\n        }\r\n    };\r\n\r\n    // Function to mark a task as complete or incomplete\r\n    const handleToggleComplete = async (taskId, isCompleted) => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.put(`https://email.erwanthomy.fr:3113/tasks/${taskId}/toggle-complete`, {\r\n                isCompleted,\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage(`Task marked as ${isCompleted ? 'complete' : 'unfinished'} successfully!`);\r\n                fetchTasks(); // Refresh the task list after updating status\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to update task status. Please try again.');\r\n            console.error('Error updating task status:', error);\r\n        }\r\n    };\r\n\r\n    // Function to archive a task\r\n    const handleArchiveTask = async (taskId) => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        try {\r\n            const response = await axios.put(`https://email.erwanthomy.fr:3113/tasks/${taskId}/archive`, null, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage('Task archived successfully!');\r\n                fetchTasks(); // Refresh the task list after archiving\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to archive task. Please try again.');\r\n            console.error('Error archiving task:', error);\r\n        }\r\n    };\r\n\r\n    // Function to handle filter change\r\n    const handleFilterChange = (e) => {\r\n        const selectedFilter = e.target.value;\r\n        setFilterType(selectedFilter);\r\n        applyFilter(selectedFilter);\r\n    };\r\n\r\n    // Function to apply the selected filter\r\n    const applyFilter = (filterType) => {\r\n        let sortedTasks = [...tasks];\r\n        if (filterType === 'dueDate') {\r\n            sortedTasks.sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\r\n        } else if (filterType === 'creationDate') {\r\n            sortedTasks.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\r\n        }\r\n        setFilteredTasks(sortedTasks);\r\n    };\r\n\r\n    // Function to handle view change\r\n    const handleViewChange = (selectedView) => {\r\n        setView(selectedView);\r\n        setMessage('');\r\n    };\r\n\r\n    const userId = localStorage.getItem('userId'); // Assuming userId is stored in localStorage\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <button className='go-back' onClick={() => (navigate('/dashboard'))}>Go back</button>\r\n            <h2>To-Do List Management</h2>\r\n\r\n            {/* Menu View */}\r\n            {view === 'menu' && (\r\n                <div className=\"menu-buttons\">\r\n                    <button onClick={() => handleViewChange('create')} className=\"menu-button\">\r\n                        Create Task\r\n                    </button>\r\n                    <button onClick={() => handleViewChange('view')} className=\"menu-button\">\r\n                        View Tasks\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Create Task View */}\r\n            {view === 'create' && (\r\n                <div>\r\n                    <button onClick={() => handleViewChange('menu')} className=\"back-button\">\r\n                        Back to Menu\r\n                    </button>\r\n                    <form onSubmit={handleCreateTask} className=\"form-section\">\r\n                        <h3>Create a New Task</h3>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Task Type</label>\r\n                            <select\r\n                                value={taskType}\r\n                                onChange={(e) => setTaskType(e.target.value)}\r\n                                required\r\n                            >\r\n                                <option value=\"personal\">Personal Task</option>\r\n                                <option value=\"group\">Group Task</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        {taskType === 'group' && (\r\n                            <div className=\"form-group\">\r\n                                <label>Select Group</label>\r\n                                <select\r\n                                    value={selectedGroup}\r\n                                    onChange={(e) => setSelectedGroup(e.target.value)}\r\n                                    required\r\n                                >\r\n                                    <option value=\"\" disabled>Select a group</option>\r\n                                    {groups.map((group) => (\r\n                                        <option key={group.group_id} value={group.group_id}>\r\n                                            {group.group_name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Title</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Description</label>\r\n                            <textarea\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Due Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                value={dueDate}\r\n                                onChange={(e) => setDueDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\">Create Task</button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n\r\n            {/* View Tasks View */}\r\n            {view === 'view' && (\r\n                <div>\r\n                    <button onClick={() => handleViewChange('menu')} className=\"back-button\">\r\n                        Back to Menu\r\n                    </button>\r\n                    <div className=\"filter-section\">\r\n                        <label>Filter Tasks By: </label>\r\n                        <select value={filterType} onChange={handleFilterChange}>\r\n                            <option value=\"\">None</option>\r\n                            <option value=\"dueDate\">Due Date</option>\r\n                            <option value=\"creationDate\">Creation Date</option>\r\n                        </select>\r\n                    </div>\r\n                    <h3>Your Tasks</h3>\r\n                    {filteredTasks.length > 0 ? (\r\n                        <ul className=\"task-list\">\r\n                            {filteredTasks.map((task) => (\r\n                                <li key={task.task_id}>\r\n                                    <h4>{task.title}</h4>\r\n                                    <p>{task.description}</p>\r\n                                    {task.group_id && (\r\n                                        <p>Group: <strong>{task.group_name}</strong></p>\r\n                                    )}\r\n                                    <p>Due: {task.due_date ? new Date(task.due_date).toLocaleDateString() : 'No due date'}</p>\r\n                                    <p>Status: {task.is_completed ? 'Completed' : 'Pending'}</p>\r\n\r\n                                    {task.is_completed ? (\r\n                                        <>\r\n                                            <button onClick={() => handleToggleComplete(task.task_id, false)} className=\"complete-button\">\r\n                                                Mark as Unfinished\r\n                                            </button>\r\n                                            <button onClick={() => handleArchiveTask(task.task_id)} className=\"archive-button\">\r\n                                                Archive Task\r\n                                            </button>\r\n                                        </>\r\n                                    ) : (\r\n                                        <button onClick={() => handleToggleComplete(task.task_id, true)} className=\"complete-button\">\r\n                                            Mark as Finished\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    {(task.user_id === userId || task.admin_id === userId) && (\r\n                                        <button onClick={() => handleDeleteTask(task.task_id)} className=\"delete-button\">\r\n                                            Delete Task\r\n                                        </button>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>You have no tasks yet.</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {message && <p className=\"message\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoLists;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}