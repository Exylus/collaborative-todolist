{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personnal\\\\todolist.erwanthomy.fr\\\\client\\\\src\\\\components\\\\Groups.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { DeleteGroupModal, LeaveGroupModal } from './Modal';\nimport './Groups.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Groups = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [groupName, setGroupName] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [groupToDelete, setGroupToDelete] = useState(null);\n  const [groupToLeave, setGroupToLeave] = useState(null);\n  const [showLeaveModal, setShowLeaveModal] = useState(false);\n  useEffect(() => {\n    // Fetch the list of groups the user is part of when the component loads\n    fetchGroups();\n  });\n  const navigate = useNavigate();\n\n  // Function to fetch groups the user is part of\n  const fetchGroups = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get('http://localhost:3113/groups', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setGroups(response.data); // Update the state with the fetched groups\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        setMessage('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        setMessage('Failed to fetch group. Please try again.');\n      }\n      console.error('Error fetching group:', error);\n    }\n  };\n\n  // Function to handle creating a new group\n  const handleCreateGroup = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setMessage('You need to login to create a group.');\n      return navigate('/login');\n    }\n    try {\n      const response = await axios.post('http://localhost:3113/groups/create', {\n        groupName,\n        description\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 201) {\n        setMessage('Group created successfully!');\n        setGroupName('');\n        setDescription('');\n        fetchGroups(); // Refresh group list\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        setMessage('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        setMessage('Failed to create group. Please try again.');\n      }\n      console.error('Error creating group:', error);\n    }\n  };\n\n  // Function to handle deleting a group\n  const handleDeleteGroup = async () => {\n    if (!groupToDelete) return;\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.delete(`http://localhost:3113/groups/${groupToDelete}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setMessage('Group deleted successfully!');\n        setGroupToDelete(null);\n        setShowModal(false);\n        fetchGroups(); // Refresh the group list after deleting a group\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        setMessage('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        setMessage('Failed to delete group. Please try again.');\n      }\n      console.error('Error deleting group:', error);\n    }\n  };\n\n  // Show the delete confirmation modal for the selected group\n  const confirmDeleteGroup = groupId => {\n    setGroupToDelete(groupId);\n    setShowModal(true);\n  };\n  const handleLeaveGroup = async () => {\n    if (!groupToLeave) return;\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post(`http://localhost:5000/groups/leave`, {\n        groupId: groupToLeave\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setMessage('You have left the group successfully.');\n        setGroupToLeave(null);\n        setShowLeaveModal(false);\n        fetchGroups(); // Refresh the group list after leaving the group\n      }\n    } catch (error) {\n      setMessage('Failed to leave the group. Please try again.');\n      console.error('Error leaving group:', error);\n      setShowLeaveModal(false);\n    }\n  };\n\n  // Show the leave group confirmation modal\n  const confirmLeaveGroup = groupId => {\n    setGroupToLeave(groupId);\n    setShowLeaveModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"groups-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateGroup,\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create a New Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Group Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: groupName,\n          onChange: e => setGroupName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), groups.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"group-list\",\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: group.group_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: group.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }, this), group.is_admin ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => confirmDeleteGroup(group.group_id),\n          className: \"delete-button\",\n          children: \"Delete Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => confirmLeaveGroup(group.group_id),\n          className: \"leave-button\",\n          children: \"Leave Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 33\n        }, this)]\n      }, group.group_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are not part of any groups yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DeleteGroupModal, {\n      show: showModal,\n      onClose: () => setShowModal(false),\n      onConfirm: handleDeleteGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LeaveGroupModal, {\n      show: showLeaveModal,\n      onClose: () => setShowLeaveModal(false),\n      onConfirm: handleLeaveGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_s(Groups, \"8JbTgOU+fHl2Pf+EPL0hOe6mSSc=\", false, function () {\n  return [useNavigate];\n});\n_c = Groups;\nexport default Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","DeleteGroupModal","LeaveGroupModal","jsxDEV","_jsxDEV","Groups","_s","groups","setGroups","groupName","setGroupName","description","setDescription","message","setMessage","showModal","setShowModal","groupToDelete","setGroupToDelete","groupToLeave","setGroupToLeave","showLeaveModal","setShowLeaveModal","fetchGroups","navigate","token","localStorage","getItem","response","get","headers","Authorization","data","error","status","removeItem","console","handleCreateGroup","e","preventDefault","post","handleDeleteGroup","delete","confirmDeleteGroup","groupId","handleLeaveGroup","confirmLeaveGroup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","length","map","group","group_name","is_admin","onClick","group_id","show","onClose","onConfirm","_c","$RefreshReg$"],"sources":["E:/Personnal/todolist.erwanthomy.fr/client/src/components/Groups.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { DeleteGroupModal, LeaveGroupModal } from './Modal';\r\nimport './Groups.css';\r\n\r\nconst Groups = () => {\r\n    const [groups, setGroups] = useState([]);\r\n    const [groupName, setGroupName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [groupToDelete, setGroupToDelete] = useState(null);\r\n    const [groupToLeave, setGroupToLeave] = useState(null);\r\n    const [showLeaveModal, setShowLeaveModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Fetch the list of groups the user is part of when the component loads\r\n        fetchGroups();\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // Function to fetch groups the user is part of\r\n    const fetchGroups = async () => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await axios.get('http://localhost:3113/groups', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setGroups(response.data); // Update the state with the fetched groups\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 403) {\r\n                setMessage('Session expired. Please log in again.');\r\n                localStorage.removeItem('token');\r\n                navigate('/login');\r\n            } else {\r\n                setMessage('Failed to fetch group. Please try again.');\r\n            }\r\n            console.error('Error fetching group:', error);\r\n        }\r\n    };\r\n\r\n    // Function to handle creating a new group\r\n    const handleCreateGroup = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            setMessage('You need to login to create a group.');\r\n            return navigate('/login');\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                'http://localhost:3113/groups/create',\r\n                { groupName, description },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 201) {\r\n                setMessage('Group created successfully!');\r\n                setGroupName('');\r\n                setDescription('');\r\n                fetchGroups(); // Refresh group list\r\n            }\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 403) {\r\n                setMessage('Session expired. Please log in again.');\r\n                localStorage.removeItem('token');\r\n                navigate('/login');\r\n            } else {\r\n                setMessage('Failed to create group. Please try again.');\r\n            }\r\n            console.error('Error creating group:', error);\r\n        }\r\n    };\r\n\r\n    // Function to handle deleting a group\r\n    const handleDeleteGroup = async () => {\r\n        if (!groupToDelete) return;\r\n\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await axios.delete(`http://localhost:3113/groups/${groupToDelete}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage('Group deleted successfully!');\r\n                setGroupToDelete(null);\r\n                setShowModal(false);\r\n                fetchGroups(); // Refresh the group list after deleting a group\r\n            }\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 403) {\r\n                setMessage('Session expired. Please log in again.');\r\n                localStorage.removeItem('token');\r\n                navigate('/login');\r\n            } else {\r\n                setMessage('Failed to delete group. Please try again.');\r\n            }\r\n            console.error('Error deleting group:', error);\r\n        }\r\n    };\r\n\r\n    // Show the delete confirmation modal for the selected group\r\n    const confirmDeleteGroup = (groupId) => {\r\n        setGroupToDelete(groupId);\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleLeaveGroup = async () => {\r\n        if (!groupToLeave) return;\r\n\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await axios.post(`http://localhost:5000/groups/leave`, { groupId: groupToLeave }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage('You have left the group successfully.');\r\n                setGroupToLeave(null);\r\n                setShowLeaveModal(false);\r\n                fetchGroups(); // Refresh the group list after leaving the group\r\n            }\r\n        } catch (error) {\r\n            setMessage('Failed to leave the group. Please try again.');\r\n            console.error('Error leaving group:', error);\r\n            setShowLeaveModal(false);\r\n        }\r\n    };\r\n\r\n    // Show the leave group confirmation modal\r\n    const confirmLeaveGroup = (groupId) => {\r\n        setGroupToLeave(groupId);\r\n        setShowLeaveModal(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"groups-container\">\r\n            <h2>Groups</h2>\r\n\r\n            {/* Create Group Form */}\r\n            <form onSubmit={handleCreateGroup} className=\"form-section\">\r\n                <h3>Create a New Group</h3>\r\n                <div className=\"form-group\">\r\n                    <label>Group Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={groupName}\r\n                        onChange={(e) => setGroupName(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Create Group</button>\r\n            </form>\r\n\r\n            {/* Display User's Groups */}\r\n            <h3>Your Groups</h3>\r\n            {groups.length > 0 ? (\r\n                <ul className=\"group-list\">\r\n                    {groups.map((group) => (\r\n                        <li key={group.group_id}>\r\n                            <h4>{group.group_name}</h4>\r\n                            <p>{group.description}</p>\r\n                            {group.is_admin ? (\r\n                                <button\r\n                                    onClick={() => confirmDeleteGroup(group.group_id)}\r\n                                    className=\"delete-button\"\r\n                                >\r\n                                    Delete Group\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    onClick={() => confirmLeaveGroup(group.group_id)}\r\n                                    className=\"leave-button\"\r\n                                >\r\n                                    Leave Group\r\n                                </button>\r\n                            )}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>You are not part of any groups yet.</p>\r\n            )}\r\n\r\n            {/* Confirmation Modal for Deleting a Group */}\r\n            <DeleteGroupModal\r\n                show={showModal}\r\n                onClose={() => setShowModal(false)}\r\n                onConfirm={handleDeleteGroup}\r\n            />\r\n\r\n            {/* Confirmation Modal for Leaving a Group */}\r\n            <LeaveGroupModal\r\n                show={showLeaveModal}\r\n                onClose={() => setShowLeaveModal(false)}\r\n                onConfirm={handleLeaveGroup}\r\n            />\r\n\r\n            {message && <p className=\"message\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Groups;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}