{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personnal\\\\todolist.erwanthomy.fr\\\\client\\\\src\\\\components\\\\ToDoLists.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ToDoList.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoLists = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [taskType, setTaskType] = useState('personal'); // personal or group\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [view, setView] = useState('menu'); // menu, create, view\n  const [message, setMessage] = useState('');\n  const [filterType, setFilterType] = useState(''); // to store the selected filter type\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (view === 'create') {\n      fetchGroups(); // Fetch groups when creating a new task\n    }\n    if (view === 'view') {\n      fetchTasks(); // Fetch tasks when viewing tasks\n    }\n  }, [view]);\n\n  // Function to fetch user's groups for task creation\n  const fetchGroups = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setMessage('You need to login to access your groups.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://localhost:3113/groups', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setGroups(response.data);\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n      setMessage('Error fetching groups.');\n    }\n  };\n\n  // Function to fetch all tasks for the user\n  const fetchTasks = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setMessage('You need to login to view your tasks.');\n      return;\n    }\n    try {\n      const response = await axios.get('http://localhost:3113/tasks', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(response.data); // Update tasks state with fetched tasks\n      setFilteredTasks(response.data); // Set the filtered tasks to initial fetched tasks\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        setMessage('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        var _error$response, _error$response$data;\n        setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to fetch tasks. Please try again.');\n      }\n      console.error('Error fetching tasks:', error);\n    }\n    ;\n\n    // Function to create a task (personal or group)\n    const handleCreateTask = async e => {\n      e.preventDefault();\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.post('http://localhost:3113/tasks/create', {\n          title,\n          description,\n          dueDate,\n          groupId: taskType === 'group' ? selectedGroup : null // Use groupId if it's a group task\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 201) {\n          setMessage('Task created successfully!');\n          setTitle('');\n          setDescription('');\n          setDueDate('');\n          setSelectedGroup('');\n          setView('menu'); // Go back to the menu after creating a task\n        }\n      } catch (error) {\n        setMessage('Failed to create task. Please try again.');\n        console.error('Error creating task:', error);\n      }\n    };\n\n    // Function to delete a task (only allowed if user is the creator or group admin)\n    const handleDeleteTask = async taskId => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.delete(`http://localhost:3113/tasks/${taskId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          setMessage('Task deleted successfully!');\n          fetchTasks(); // Refresh the task list after deletion\n        }\n      } catch (error) {\n        setMessage('Failed to delete task. Please try again.');\n        console.error('Error deleting task:', error);\n      }\n    };\n\n    // Function to mark a task as complete or incomplete\n    const handleToggleComplete = async (taskId, isCompleted) => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.put(`http://localhost:3113/tasks/${taskId}/toggle-complete`, {\n          isCompleted\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          setMessage(`Task marked as ${isCompleted ? 'complete' : 'unfinished'} successfully!`);\n          fetchTasks(); // Refresh the task list after updating status\n        }\n      } catch (error) {\n        setMessage('Failed to update task status. Please try again.');\n        console.error('Error updating task status:', error);\n      }\n    };\n\n    // Function to archive a task\n    const handleArchiveTask = async taskId => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.put(`http://localhost:3113/tasks/${taskId}/archive`, null, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          setMessage('Task archived successfully!');\n          fetchTasks(); // Refresh the task list after archiving\n        }\n      } catch (error) {\n        setMessage('Failed to archive task. Please try again.');\n        console.error('Error archiving task:', error);\n      }\n    };\n\n    // Function to handle filter change\n    const handleFilterChange = e => {\n      const selectedFilter = e.target.value;\n      setFilterType(selectedFilter);\n      applyFilter(selectedFilter);\n    };\n\n    // Function to apply the selected filter\n    const applyFilter = filterType => {\n      let sortedTasks = [...tasks];\n      if (filterType === 'dueDate') {\n        sortedTasks.sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\n      } else if (filterType === 'creationDate') {\n        sortedTasks.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n      }\n      setFilteredTasks(sortedTasks);\n    };\n\n    // Function to handle view change\n    const handleViewChange = selectedView => {\n      setView(selectedView);\n      setMessage('');\n    };\n    const userId = localStorage.getItem('userId'); // Assuming userId is stored in localStorage\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"go-back\",\n        onClick: () => navigate('/dashboard'),\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"To-Do List Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), view === 'menu' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleViewChange('create'),\n          className: \"menu-button\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleViewChange('view'),\n          className: \"menu-button\",\n          children: \"View Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this), view === 'create' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleViewChange('menu'),\n          className: \"back-button\",\n          children: \"Back to Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateTask,\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create a New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: taskType,\n              onChange: e => setTaskType(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"personal\",\n                children: \"Personal Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"group\",\n                children: \"Group Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this), taskType === 'group' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedGroup,\n              onChange: e => setSelectedGroup(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: group.group_id,\n                children: group.group_name\n              }, group.group_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: dueDate,\n              onChange: e => setDueDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), view === 'view' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleViewChange('menu'),\n          className: \"back-button\",\n          children: \"Back to Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Filter Tasks By: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterType,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dueDate\",\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"creationDate\",\n              children: \"Creation Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this), filteredTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"task-list\",\n          children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 41\n            }, this), task.group_id && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Group: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: task.group_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Due: \", task.due_date ? new Date(task.due_date).toLocaleDateString() : 'No due date']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", task.is_completed ? 'Completed' : 'Pending']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 41\n            }, this), task.is_completed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleToggleComplete(task.task_id, false),\n                className: \"complete-button\",\n                children: \"Mark as Unfinished\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleArchiveTask(task.task_id),\n                className: \"archive-button\",\n                children: \"Archive Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToggleComplete(task.task_id, true),\n              className: \"complete-button\",\n              children: \"Mark as Finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 45\n            }, this), (task.user_id === userId || task.admin_id === userId) && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTask(task.task_id),\n              className: \"delete-button\",\n              children: \"Delete Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 45\n            }, this)]\n          }, task.task_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have no tasks yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this);\n  };\n};\n_s(ToDoLists, \"Nqjk+PL9eNPRO/ELA8zgUMzocWM=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoLists;\nexport default ToDoLists;\nvar _c;\n$RefreshReg$(_c, \"ToDoLists\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoLists","_s","groups","setGroups","tasks","setTasks","filteredTasks","setFilteredTasks","title","setTitle","description","setDescription","dueDate","setDueDate","taskType","setTaskType","selectedGroup","setSelectedGroup","view","setView","message","setMessage","filterType","setFilterType","navigate","fetchGroups","fetchTasks","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","status","removeItem","_error$response","_error$response$data","handleCreateTask","e","preventDefault","post","groupId","handleDeleteTask","taskId","delete","handleToggleComplete","isCompleted","put","handleArchiveTask","handleFilterChange","selectedFilter","target","value","applyFilter","sortedTasks","sort","a","b","Date","due_date","created_at","handleViewChange","selectedView","userId","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","disabled","map","group","group_id","group_name","type","length","task","toLocaleDateString","is_completed","task_id","user_id","admin_id","_c","$RefreshReg$"],"sources":["E:/Personnal/todolist.erwanthomy.fr/client/src/components/ToDoLists.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ToDoList.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ToDoLists = () => {\r\n    const [groups, setGroups] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [dueDate, setDueDate] = useState('');\r\n    const [taskType, setTaskType] = useState('personal'); // personal or group\r\n    const [selectedGroup, setSelectedGroup] = useState('');\r\n    const [view, setView] = useState('menu'); // menu, create, view\r\n    const [message, setMessage] = useState('');\r\n    const [filterType, setFilterType] = useState(''); // to store the selected filter type\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (view === 'create') {\r\n            fetchGroups(); // Fetch groups when creating a new task\r\n        }\r\n        if (view === 'view') {\r\n            fetchTasks(); // Fetch tasks when viewing tasks\r\n        }\r\n    }, [view]);\r\n\r\n    // Function to fetch user's groups for task creation\r\n    const fetchGroups = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            setMessage('You need to login to access your groups.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('http://localhost:3113/groups', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setGroups(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching groups:', error);\r\n            setMessage('Error fetching groups.');\r\n        }\r\n    };\r\n\r\n    // Function to fetch all tasks for the user\r\n    const fetchTasks = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            setMessage('You need to login to view your tasks.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('http://localhost:3113/tasks', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            setTasks(response.data); // Update tasks state with fetched tasks\r\n            setFilteredTasks(response.data); // Set the filtered tasks to initial fetched tasks\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 403) {\r\n                setMessage('Session expired. Please log in again.');\r\n                localStorage.removeItem('token');\r\n                navigate('/login');\r\n            } else {\r\n                setMessage(error.response?.data?.error || 'Failed to fetch tasks. Please try again.');\r\n            }\r\n            console.error('Error fetching tasks:', error);\r\n        };\r\n\r\n        // Function to create a task (personal or group)\r\n        const handleCreateTask = async (e) => {\r\n            e.preventDefault();\r\n            const token = localStorage.getItem('token');\r\n\r\n            try {\r\n                const response = await axios.post(\r\n                    'http://localhost:3113/tasks/create',\r\n                    {\r\n                        title,\r\n                        description,\r\n                        dueDate,\r\n                        groupId: taskType === 'group' ? selectedGroup : null, // Use groupId if it's a group task\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                if (response.status === 201) {\r\n                    setMessage('Task created successfully!');\r\n                    setTitle('');\r\n                    setDescription('');\r\n                    setDueDate('');\r\n                    setSelectedGroup('');\r\n                    setView('menu'); // Go back to the menu after creating a task\r\n                }\r\n            } catch (error) {\r\n                setMessage('Failed to create task. Please try again.');\r\n                console.error('Error creating task:', error);\r\n            }\r\n        };\r\n\r\n        // Function to delete a task (only allowed if user is the creator or group admin)\r\n        const handleDeleteTask = async (taskId) => {\r\n            const token = localStorage.getItem('token');\r\n\r\n            try {\r\n                const response = await axios.delete(`http://localhost:3113/tasks/${taskId}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status === 200) {\r\n                    setMessage('Task deleted successfully!');\r\n                    fetchTasks(); // Refresh the task list after deletion\r\n                }\r\n            } catch (error) {\r\n                setMessage('Failed to delete task. Please try again.');\r\n                console.error('Error deleting task:', error);\r\n            }\r\n        };\r\n\r\n        // Function to mark a task as complete or incomplete\r\n        const handleToggleComplete = async (taskId, isCompleted) => {\r\n            const token = localStorage.getItem('token');\r\n\r\n            try {\r\n                const response = await axios.put(`http://localhost:3113/tasks/${taskId}/toggle-complete`, {\r\n                    isCompleted,\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status === 200) {\r\n                    setMessage(`Task marked as ${isCompleted ? 'complete' : 'unfinished'} successfully!`);\r\n                    fetchTasks(); // Refresh the task list after updating status\r\n                }\r\n            } catch (error) {\r\n                setMessage('Failed to update task status. Please try again.');\r\n                console.error('Error updating task status:', error);\r\n            }\r\n        };\r\n\r\n        // Function to archive a task\r\n        const handleArchiveTask = async (taskId) => {\r\n            const token = localStorage.getItem('token');\r\n\r\n            try {\r\n                const response = await axios.put(`http://localhost:3113/tasks/${taskId}/archive`, null, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n\r\n                if (response.status === 200) {\r\n                    setMessage('Task archived successfully!');\r\n                    fetchTasks(); // Refresh the task list after archiving\r\n                }\r\n            } catch (error) {\r\n                setMessage('Failed to archive task. Please try again.');\r\n                console.error('Error archiving task:', error);\r\n            }\r\n        };\r\n\r\n        // Function to handle filter change\r\n        const handleFilterChange = (e) => {\r\n            const selectedFilter = e.target.value;\r\n            setFilterType(selectedFilter);\r\n            applyFilter(selectedFilter);\r\n        };\r\n\r\n        // Function to apply the selected filter\r\n        const applyFilter = (filterType) => {\r\n            let sortedTasks = [...tasks];\r\n            if (filterType === 'dueDate') {\r\n                sortedTasks.sort((a, b) => new Date(a.due_date) - new Date(b.due_date));\r\n            } else if (filterType === 'creationDate') {\r\n                sortedTasks.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\r\n            }\r\n            setFilteredTasks(sortedTasks);\r\n        };\r\n\r\n        // Function to handle view change\r\n        const handleViewChange = (selectedView) => {\r\n            setView(selectedView);\r\n            setMessage('');\r\n        };\r\n\r\n        const userId = localStorage.getItem('userId'); // Assuming userId is stored in localStorage\r\n\r\n        return (\r\n            <div className=\"todo-container\">\r\n                <button className='go-back' onClick={() => (navigate('/dashboard'))}>Go back</button>\r\n                <h2>To-Do List Management</h2>\r\n\r\n                {/* Menu View */}\r\n                {view === 'menu' && (\r\n                    <div className=\"menu-buttons\">\r\n                        <button onClick={() => handleViewChange('create')} className=\"menu-button\">\r\n                            Create Task\r\n                        </button>\r\n                        <button onClick={() => handleViewChange('view')} className=\"menu-button\">\r\n                            View Tasks\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Create Task View */}\r\n                {view === 'create' && (\r\n                    <div>\r\n                        <button onClick={() => handleViewChange('menu')} className=\"back-button\">\r\n                            Back to Menu\r\n                        </button>\r\n                        <form onSubmit={handleCreateTask} className=\"form-section\">\r\n                            <h3>Create a New Task</h3>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Task Type</label>\r\n                                <select\r\n                                    value={taskType}\r\n                                    onChange={(e) => setTaskType(e.target.value)}\r\n                                    required\r\n                                >\r\n                                    <option value=\"personal\">Personal Task</option>\r\n                                    <option value=\"group\">Group Task</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            {taskType === 'group' && (\r\n                                <div className=\"form-group\">\r\n                                    <label>Select Group</label>\r\n                                    <select\r\n                                        value={selectedGroup}\r\n                                        onChange={(e) => setSelectedGroup(e.target.value)}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\" disabled>Select a group</option>\r\n                                        {groups.map((group) => (\r\n                                            <option key={group.group_id} value={group.group_id}>\r\n                                                {group.group_name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Description</label>\r\n                                <textarea\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Due Date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    value={dueDate}\r\n                                    onChange={(e) => setDueDate(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\">Create Task</button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n\r\n                {/* View Tasks View */}\r\n                {view === 'view' && (\r\n                    <div>\r\n                        <button onClick={() => handleViewChange('menu')} className=\"back-button\">\r\n                            Back to Menu\r\n                        </button>\r\n                        <div className=\"filter-section\">\r\n                            <label>Filter Tasks By: </label>\r\n                            <select value={filterType} onChange={handleFilterChange}>\r\n                                <option value=\"\">None</option>\r\n                                <option value=\"dueDate\">Due Date</option>\r\n                                <option value=\"creationDate\">Creation Date</option>\r\n                            </select>\r\n                        </div>\r\n                        <h3>Your Tasks</h3>\r\n                        {filteredTasks.length > 0 ? (\r\n                            <ul className=\"task-list\">\r\n                                {filteredTasks.map((task) => (\r\n                                    <li key={task.task_id}>\r\n                                        <h4>{task.title}</h4>\r\n                                        <p>{task.description}</p>\r\n                                        {task.group_id && (\r\n                                            <p>Group: <strong>{task.group_name}</strong></p>\r\n                                        )}\r\n                                        <p>Due: {task.due_date ? new Date(task.due_date).toLocaleDateString() : 'No due date'}</p>\r\n                                        <p>Status: {task.is_completed ? 'Completed' : 'Pending'}</p>\r\n\r\n                                        {task.is_completed ? (\r\n                                            <>\r\n                                                <button onClick={() => handleToggleComplete(task.task_id, false)} className=\"complete-button\">\r\n                                                    Mark as Unfinished\r\n                                                </button>\r\n                                                <button onClick={() => handleArchiveTask(task.task_id)} className=\"archive-button\">\r\n                                                    Archive Task\r\n                                                </button>\r\n                                            </>\r\n                                        ) : (\r\n                                            <button onClick={() => handleToggleComplete(task.task_id, true)} className=\"complete-button\">\r\n                                                Mark as Finished\r\n                                            </button>\r\n                                        )}\r\n\r\n                                        {(task.user_id === userId || task.admin_id === userId) && (\r\n                                            <button onClick={() => handleDeleteTask(task.task_id)} className=\"delete-button\">\r\n                                                Delete Task\r\n                                            </button>\r\n                                        )}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>You have no tasks yet.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {message && <p className=\"message\">{message}</p>}\r\n            </div>\r\n        );\r\n    };\r\n}\r\nexport default ToDoLists;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}